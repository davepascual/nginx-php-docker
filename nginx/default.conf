server {
    listen 80;
    # IPV6 ip address
    listen [::]:80;
    server_name localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
    }

    # Mapping PHP app one to port 80 /php-1 path
    location /php-1 {
        proxy_pass http://host.docker.internal:8000;
    }

    
    # Mapping PHP app two to port 80 /php-2 path
    location /php-2 {
        proxy_pass http://host.docker.internal:8001;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }


    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}


# Reverse proxy for php app

# PHP app one
server {
    listen 81;
    location / {
        proxy_pass http://host.docker.internal:8000;
    }
}


# PHP app two
server {
    listen 82;
    location / {
        proxy_pass http://host.docker.internal:8001;
    }
}


# Load balancing with php applications different servers
upstream php-app{
    server host.docker.internal:8000;
    server host.docker.internal:8001;   
}

# PHP Load balancer in PORT 8009
server {
    listen 8009;
    location / {
        proxy_pass http://php-app;
    }
}

